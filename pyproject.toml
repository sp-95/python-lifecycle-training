[tool.poetry]
name = "python-lifecycle-training"
version = "0.1.2"
repository = "https://github.com/sp-fm/python-lifecycle-training"
documentation = "https://sp-fm.github.io/python-lifecycle-training/"
description = "A training program to learn the Python Development Cycle"
authors = ["Shashanka Prajapati <shashanka@fusemachines.com>"]
readme = "README.rst"
license =  "MIT license"
keywords = []
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]
packages = [
    { include = "python_lifecycle_training" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.7"
fire = "^0.3.1"
loguru = "^0.5.3"
dynaconf = "^3.1.2"

[tool.poetry.dev-dependencies]
pre-commit = "^2.7.1"
pytest-cov = "^2.10.1"
tox = "^3.20.0"
sphinx-rtd-theme = "^0.5.0"

[tool.poetry.scripts]
calc = "python_lifecycle_training.calculator.cli:main"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/sp-fm/python-lifecycle-training/issues"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--cov --cov-report=term-missing"

[tool.coverage.run]
branch = true
source = [
    "python_lifecycle_training",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about fire commands
    "fire.Fire",
]
fail_under = 90
ignore_errors = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
